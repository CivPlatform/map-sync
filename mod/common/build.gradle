plugins {
	// https://github.com/KyoriPowered/blossom/releases
	id("net.kyori.blossom") version "1.3.1"
}

architectury {
	injectInjectables = false
	common(rootProject.enabled_platforms.split(","))
}

dependencies {
	// We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
	// Do NOT use other classes from fabric loader
	modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"


	// https://modrinth.com/mod/voxelmap-updated/version/1.18.2-1.11.2 (1.11.2 fabric)
	modCompileOnly("maven.modrinth:voxelmap-updated:SDVTG1wT")
	// https://modrinth.com/mod/journeymap/version/1.18.2-5.9.7-fabric (5.9.7 fabric)
	modCompileOnly("maven.modrinth:journeymap:5JbcGXLn")
	// https://modrinth.com/mod/xaeros-minimap/version/23.6.2_Fabric_1.18.2 (23.6.2 fabric)
	modCompileOnly("maven.modrinth:xaeros-minimap:Jwydpps9")
}

tasks {
	blossom {
		replaceToken (
			"%VERSION%",
			project.version,
			"src/main/java/gjum/minecraft/mapsync/common/MapSyncMod.java"
		)
	}
}

processResources {
	filesMatching("assets/mapsync/lang/en_us.json") {
		expand(rootProject.properties)
	}
}
