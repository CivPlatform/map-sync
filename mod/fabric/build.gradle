plugins {
	id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
	platformSetupLoomIde()
	fabric()
}

configurations {
	common
	shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
	compileClasspath.extendsFrom common
	runtimeClasspath.extendsFrom common
	developmentFabric.extendsFrom common
}

dependencies {
	modImplementation("net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}")
	modApi("net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}")

	common(project(path: ":common", configuration: "namedElements")) { transitive false }
	shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }


	// https://modrinth.com/mod/voxelmap-updated/version/1.18.2-1.11.2 (1.11.2 fabric)
	modCompileOnly("maven.modrinth:voxelmap-updated:SDVTG1wT")
	// https://modrinth.com/mod/journeymap/version/1.18.2-5.9.7-fabric (5.9.7 fabric)
	modCompileOnly("maven.modrinth:journeymap:5JbcGXLn")
	// https://modrinth.com/mod/xaeros-minimap/version/23.6.2_Fabric_1.18.2 (23.6.2 fabric)
	modCompileOnly("maven.modrinth:xaeros-minimap:Jwydpps9")


	// https://modrinth.com/mod/modmenu/version/3.2.5 (3.2.5 fabric)
	modCompileOnly("maven.modrinth:modmenu:nVxObSbX")
}

processResources {
	filesMatching("fabric.mod.json") {
		expand(rootProject.properties)
	}
}

shadowJar {
	configurations = [project.configurations.shadowCommon]
	classifier "dev-shadow"
}

remapJar {
	inputFile.set(shadowJar.archiveFile)
	dependsOn shadowJar
	classifier "fabric"
}

jar {
	classifier "dev"
}

sourcesJar {
	def commonSources = project(":common").sourcesJar
	dependsOn commonSources
	from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
	withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
		skip()
	}
}

tasks.register("cleanJar", Delete) {
	delete fileTree("../dist") {
		include "*-fabric.jar"
	}
}

tasks.register("copyJar", Copy) {
	dependsOn cleanJar
	from remapJar
	into "../dist"
}

build.dependsOn copyJar
